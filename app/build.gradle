apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: '../config/quality/quality.gradle'


android {
    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add  release keystore in /keystore folder
        release {
            storeFile file('keystore/Jenkins.keystore')
            keyAlias 'Eat'
            storePassword "jenkins"
            keyPassword "buildMe"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }
    compileSdkVersion 24
    buildToolsVersion '24.0.2'
    defaultConfig {
        multiDexEnabled true
        minSdkVersion 16
        targetSdkVersion 24
        versionName version
        versionCode buildVersionCode()
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        signingConfig signingConfigs.release
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
            versionNameSuffix '-DEBUG'
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
    // Prevents stopping the build because of lint errors
    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}
// Jacoco config
apply plugin: 'jacoco'

jacoco {
    // Use this version for upper ones are broken (with Gradle)
    // https://github.com/jacoco/jacoco/issues/288
    toolVersion = "0.7.1.201405082137"
}

// Edit covered scope if needed
// For my part I like having the coverage of both application and tests
def coverageSourceDirs = [
        '../app/src'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/com/jzheadley/eat',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testUnitTestDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}
//end Jacoco config

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:multidex:1.0.1'
    /*
                *       Quality of Life
                */
    // RxJava and RxAndroid Dependencies
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxandroid:1.2.1'
    // ButterKnife Dependency
    compile 'com.jakewharton:butterknife:8.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.+@aar') {
        transitive = true;
    }
    /*
                *       Networking
                */
    // Glide image loader dependency
    compile 'com.github.bumptech.glide:glide:3.5.2'
    compile 'com.android.support:support-v4:24.2.1'
    //Retrofit Dependencies
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    // Required for Retrofit Logging
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.0'
    // Imgur API Connection Library
    compile project(':ImgurConnectionLibrary')
    // Firebase authentication and core
    compile 'com.google.firebase:firebase-core:9.6.1'
    compile 'com.google.firebase:firebase-auth:9.6.1'
    compile 'com.google.android.gms:play-services-auth:9.6.1'
    /*
                *         User Interface Libraries
                */
    // Clock
    compile 'com.github.flavienlaurent.datetimepicker:library:0.0.2'
    // MaterialDrawer library for the navigation drawer
    compile('com.mikepenz:materialdrawer:5.6.0@aar') {
        transitive = true
    }
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    // Gimmme my FAB!
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:palette-v7:24.2.1'
    /*
                *       Testing Libraries
                */
    // Makes things work idk why
    androidTestCompile 'com.android.support:support-annotations:24.2.1'
    testCompile 'junit:junit:4.12'
    // Espresso Dependencies
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    // Android runner and rules support
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    // Espresso intent mocking support
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
//        exclude module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    testCompile 'org.mockito:mockito-core:2.2.28'
    /*
                    *     Google Play Services
                    */
    compile 'com.google.android.gms:play-services:9.6.1'
    compile 'com.google.android.gms:play-services-location:9.6.1'
}
apply plugin: 'com.google.gms.google-services'
apply from: "../config/artifacts.gradle"